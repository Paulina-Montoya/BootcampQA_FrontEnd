{
	"info": {
		"_postman_id": "296bdff8-5baf-405d-a689-b53ae06b8e31",
		"name": "Todoist API test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Project",
			"item": [
				{
					"name": "Create a new project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Response time is less than 650ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(650)",
									"})",
									"",
									"pm.test(\"Validate schema create project\", function () {",
									"    const expectedSchema = {",
									"    \"properties\": {",
									"        \"name\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"shared\": {",
									"            \"type\": \"boolean\"",
									"        }",
									"    }",
									"    };",
									"    pm.response.to.have.jsonSchema(expectedSchema);",
									"})",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"pm.environment.set(\"projectId\", jsonData.id);",
									"",
									"pm.test(\"Validate Json Project Id value\", function () {",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get('projectId'))",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"boardName\", \"Name Project Test\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "name",
								"value": "{{boardName}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{boardName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new project Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "name",
								"value": "Shopping List",
								"type": "text",
								"disabled": true
							},
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "token",
									"value": "{{token}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all projects Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/projects/{{projectId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a project Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/projects/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Project Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects/{{projectId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a project Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code  400 item already processed\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"Things To Buy\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects/22702",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects",
								"22702"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"})",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects/{{projectId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a project Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Request-Id",
								"value": "$(uuidgen)",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/projects/-",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"projects",
								"-"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get active tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/tasks",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get active tasks Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/tasks/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800)",
									"})",
									"",
									"pm.test(\"Validate schema create task\", function () {",
									"    const expectedSchema = {",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"number\"",
									"        },",
									"        \"name\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"    };",
									"    pm.response.to.have.jsonSchema(expectedSchema);",
									"})",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"pm.environment.set(\"taskId\", jsonData.id);",
									"",
									"pm.test(\"Validate Json Task Id value\", function () {",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get('taskId'))",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Test create new task\",\n    \"due_string\": \"tomorrow at 12:00\",\n    \"due_lang\": \"en\",\n    \"priority\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/tasks",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new task Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800)",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"\",\n    \"due_string\": \"tomorrow at 12:00\",\n    \"due_lang\": \"en\",\n    \"priority\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/tasks",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an active task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an active task Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/3",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"content\": \"Test update a task\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a task Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"content\": \"\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Close a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"})",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}/close",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "Close a task Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/0/close",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"0",
								"close"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reopen a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"})",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}/reopen",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reopen a task Negatie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/0/reopen",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"0",
								"reopen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"})",
									"",
									"pm.test(\"Response time is less than 800ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(800)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/{{taskId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"{{taskId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a task Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Verify status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"pm.environment.set(\"variable_key\", \"variable_value\");",
									"})",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tasks/2834",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tasks",
								"2834"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "cef8e414152e3b5ab0fb545dc493c6e6090d2266",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}